<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:local="clr-namespace:WpfApplication9"
        xmlns:Component="clr-namespace:WpfApplication9.Component"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        x:Class="WpfApplication9.MainWindow"
        Title="CircLab"
        Height="800"
        Width="1100"
        WindowState="Maximized"
        FontFamily="{StaticResource MaterialDesignFont}"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        Foreground="#DDFFFFFF"
        Icon="logo.bmp"
        x:Name="mwindow"
        mc:Ignorable="d">
    <Window.Resources>
        <ResourceDictionary>
            <!-- Animation of the popup -->

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Storyboard x:Key="ToolboxOpening">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
                                               Storyboard.TargetName="Toolbox">
                    <EasingDoubleKeyFrame KeyTime="0"
                                          Value="200" />
                    <EasingDoubleKeyFrame KeyTime="0:0:0.5"
                                          Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="ToolboxClosing">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
                                               Storyboard.TargetName="Toolbox">
                    <EasingDoubleKeyFrame KeyTime="0"
                                          Value="0" />
                    <EasingDoubleKeyFrame KeyTime="0:0:0.5"
                                          Value="200" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="ToolboxOpenerFadeIn" />
        </ResourceDictionary>
    </Window.Resources>
    <Window.Triggers>
        <EventTrigger RoutedEvent="ButtonBase.Click"
                      SourceName="ToolboxOpener">
            <BeginStoryboard x:Name="ToolboxOpening_BeginStoryboard"
                             Storyboard="{StaticResource ToolboxOpening}" />
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click"
                      SourceName="ToolboxCloser">
            <BeginStoryboard x:Name="ToolboxClosing_BeginStoryboard"
                             Storyboard="{StaticResource ToolboxClosing}" />
            <BeginStoryboard x:Name="ToolboxOpenerFadeIn_BeginStoryboard"
                             Storyboard="{StaticResource ToolboxOpenerFadeIn}" />
        </EventTrigger>
    </Window.Triggers>

    <materialDesign:DialogHost Identifier="RootDialog"
                               SnackbarMessageQueue="{Binding MessageQueue, ElementName=MainSnackbar}">
        <materialDesign:DrawerHost IsLeftDrawerOpen="{Binding IsChecked, ElementName=MenuToggleButton}"
                                   x:Name="drawerHost">
            <!-- Principal Menu -->
            <materialDesign:DrawerHost.LeftDrawerContent>
                <DockPanel MinWidth="212"
                           Margin="0,0,1,0">
                    <ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}"
                                  DockPanel.Dock="Top"
                                  HorizontalAlignment="Right"
                                  Margin="16"
                                  IsChecked="{Binding IsChecked, ElementName=MenuToggleButton, Mode=TwoWay}" />
                    <Image Source="logo.bmp"
                           DockPanel.Dock="Top"
                           Width="220" />
                    <ListBox x:Name="DemoItemsListBox"
                             Margin="0 16 0 16"
                             SelectedIndex="0">
                        <ListBoxItem Padding="20,8,8,8"
                                     Content="Open" />
                        <ListBoxItem Padding="20,8,8,8"
                                     Content="Save" />
                        <ListBoxItem Padding="20,8,8,8"
                                     Content="Save As ..." />
                        <ListBoxItem Padding="20,8,8,8"
                                     MouseLeftButtonUp="RightDrawerHostOpen"
                                     Content="Options" />
                        <ListBoxItem Padding="20,8,8,8"
                                     MouseLeftButtonUp="closeWindow"
                                     Content="Close" />
                    </ListBox>
                </DockPanel>
            </materialDesign:DrawerHost.LeftDrawerContent>

            <!-- Options Menu -->
            <materialDesign:DrawerHost.RightDrawerContent>
                <DockPanel MinWidth="212"
                           LastChildFill="True">
                    <Button DockPanel.Dock="Top"
                            HorizontalAlignment="Left"
                            Margin="16"
                            Style="{DynamicResource MaterialDesignToolForegroundButton}"
                            Command="{x:Static materialDesign:DrawerHost.CloseDrawerCommand}"
                            CommandParameter="{x:Static Dock.Right}">
                        <materialDesign:PackIcon Kind="ArrowRightBold" />
                    </Button>
                    <ListBox Margin="0 16 0 16"
                             SelectedIndex="0">
                        <ListBoxItem Padding="20,8,8,8"
                                     Content="Theme" />
                        <ListBoxItem Padding="20,8,8,8"
                                     Content="About" />
                        <ListBoxItem Padding="20,8,8,8"
                                     Content="Contact" />
                    </ListBox>
                </DockPanel>
            </materialDesign:DrawerHost.RightDrawerContent>

            <DockPanel>
                <materialDesign:ColorZone Padding="16"
                                          materialDesign:ShadowAssist.ShadowDepth="Depth2"
                                          Mode="PrimaryMid"
                                          DockPanel.Dock="Top"
                                          Panel.ZIndex="1">
                    <DockPanel>
                        <ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}"
                                      IsChecked="False"
                                      x:Name="MenuToggleButton" />
                        <materialDesign:PopupBox DockPanel.Dock="Right"
                                                 PlacementMode="BottomAndAlignRightEdges"
                                                 StaysOpen="True">
                            <StackPanel>
                                <Button Click="RightDrawerHostOpen"
                                        Content="Options" />
                                <Button Click="RightDrawerHostOpen"
                                        Content="Help" />
                            </StackPanel>
                        </materialDesign:PopupBox>
                        <Button DockPanel.Dock="Right"
                                Style="{DynamicResource MaterialDesignToolForegroundButton}"
                                Margin="0,0,20,0">
                            <materialDesign:PackIcon Kind="ChartTimeline"
                                                     Height="30"
                                                     Width="30" />
                        </Button>
                        <Button DockPanel.Dock="Right"
                                Style="{DynamicResource MaterialDesignToolForegroundButton}"
                                Margin="0,0,20,0">
                            <materialDesign:PackIcon Kind="Play"
                                                     Height="30"
                                                     Width="30" />
                        </Button>
                        <TextBlock HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   FontSize="22"><Run Text="CircLab" /></TextBlock>
                    </DockPanel>
                </materialDesign:ColorZone>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MaxWidth="300" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="3*" />
                    </Grid.ColumnDefinitions>
                    <DockPanel Background="#FF303030"
                               LastChildFill="False">
                        <DockPanel.Resources>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Foreground"
                                        Value="White" />
                            </Style>
                        </DockPanel.Resources>
                        <ToolBarTray DockPanel.Dock="Top">
                            <ToolBar Style="{DynamicResource MaterialDesignToolBar}"
                                     ClipToBounds="False">
                                <Button ToolTip="Save">
                                    <materialDesign:PackIcon Kind="ContentSave" />
                                </Button>
                                <Button ToolTip="Undo">
                                    <materialDesign:PackIcon Kind="Undo" />
                                </Button>
                                <Button ToolTip="Redo">
                                    <materialDesign:PackIcon Kind="Redo" />
                                </Button>
                                <Separator />
                                <Button Command="Cut"
                                        ToolTip="Cut"
                                        ToolBar.OverflowMode="AsNeeded">
                                    <materialDesign:PackIcon Kind="ContentCut" />
                                </Button>
                                <Button x:Name="button"
                                        Command="Copy"
                                        ToolTip="Copy"
                                        ToolBar.OverflowMode="AsNeeded">
                                    <materialDesign:PackIcon Kind="ContentCopy" />
                                </Button>
                            </ToolBar>
                        </ToolBarTray>
                        <Label HorizontalAlignment="Center"
                               FontWeight="Bold"
                               Content="Properties"
                               FontSize="18"
                               Foreground="#DDFBFBFB"
                               Background="{x:Null}"
                               Margin="0,20,0,20"
                               DockPanel.Dock="Top" />
                        <Grid DockPanel.Dock="Top"
                              Margin="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <TextBlock x:Name="NbrEntreText" Text="Nombre d'entrés" VerticalAlignment="Center"/>
                            <ComboBox x:Name="ComboBoxProperties" Grid.Column="1" SelectedIndex="0"  HorizontalContentAlignment="Center" VerticalContentAlignment="Center" VerticalAlignment="Stretch" SelectionChanged="ComboBoxProperties_SelectionChanged" >
                                <ComboBoxItem>2</ComboBoxItem>
                                <ComboBoxItem>3</ComboBoxItem>
                                <ComboBoxItem>4</ComboBoxItem>
                                <ComboBoxItem>8</ComboBoxItem>
                            </ComboBox>
                        </Grid>
                        <Grid DockPanel.Dock="Bottom"
                              Margin="10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="2*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <TextBlock HorizontalAlignment="Center"><Run Text="Zoom" /></TextBlock>
                            <Slider Grid.Column="1"
                                    TickFrequency="5"
                                    Minimum="1"
                                    Maximum="50"
                                    Value="25" />
                            <TextBlock Grid.Row="1"
                                       HorizontalAlignment="Center"><Run Text="Speed" /></TextBlock>
                            <Slider Grid.Row="1"
                                    Grid.Column="1"
                                    TickFrequency="5"
                                    Minimum="1"
                                    Maximum="50"
                                    Value="25" />
                        </Grid>
                        <Grid x:Name="GridCheckBox" Margin="0,1,0,0" Width="257">
                            <CheckBox x:Name="checkBox1" Content="1 input" Height="40" VerticalAlignment="Top" Margin="30,20,150,0" Width="68" Click="checkBox1_Click"/>
                            <CheckBox x:Name="checkBox2" Content="2 input" Height="40" VerticalAlignment="Top" Margin="150,20,30,0" Width="68" Click="checkBox2_Click" />
                            <CheckBox x:Name="checkBox3" Content="3 input" Height="40" VerticalAlignment="Top" Margin="30,70,150,0" Width="68" Click="checkBox3_Click" />
                            <CheckBox x:Name="checkBox4" Content="4 input" Height="40" VerticalAlignment="Top" Margin="150,70,30,-1" Width="68" Click="checkBox4_Click"/>
                            <CheckBox x:Name="checkBox5" Content="5 input" Height="40" VerticalAlignment="Top" Margin="34,115,155,0" Width="68" Click="checkBox5_Click" />
                            <CheckBox x:Name="checkBox6" Content="6 input" Height="40" VerticalAlignment="Top" Margin="154,115,35,0" Width="68" Click="checkBox6_Click" />
                            <CheckBox x:Name="checkBox7" Content="7 input" Height="40" VerticalAlignment="Top" Margin="34,165,155,0" Width="68" Click="checkBox7_Click" />
                            <CheckBox x:Name="checkBox8" Content="8 input" Height="40" VerticalAlignment="Top" Margin="154,165,35,0" Width="68" Click="checkBox8_Click" />
                        </Grid>

                    </DockPanel>
                    <GridSplitter Grid.Column="1"
                                  ResizeDirection="Columns"
                                  Width="10"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Stretch"
                                  Margin="0"
                                  x:Name="GridSplitter1" />

                    <Canvas Grid.Column="2"
                            x:Name="canvas"
                            Margin="0" MouseDown="canvas_MouseDown">
                        <Canvas.Background>
                            <!-- see http://mark-dot-net.blogspot.com/2007/06/creating-hatched-patterned-brush-in-wpf.html -->
                            <VisualBrush TileMode="Tile"
                                         Viewport="0,0,32,32"
                                         ViewportUnits="Absolute"
                                         Viewbox="0,0,32,32"
                                         ViewboxUnits="Absolute">
                                <VisualBrush.Visual>
                                    <Canvas>
                                        <Rectangle Fill="White"
                                                   Width="32"
                                                   Height="32" />
                                        <Path Stroke="LightBlue"
                                              Data="M 0 0 l 0 32" />
                                        <Path Stroke="LightBlue"
                                              Data="M 0 32 l 32 0" />
                                    </Canvas>
                                </VisualBrush.Visual>
                            </VisualBrush>


                        </Canvas.Background>
                    </Canvas>
                    <Button x:Name="ToolboxOpener"
                            Style="{DynamicResource MaterialDesignFloatingActionLightButton}"
                            Margin="0,0,50,50"
                            HorizontalAlignment="Right"
                            Height="50"
                            Width="50"
                            Content="+"
                            FontSize="26.667"
                            FontWeight="Bold"
                            BorderBrush="{x:Null}"
                            Background="#FFE91E63"
                            VerticalAlignment="Bottom"
                            RenderTransformOrigin="1.711,0.605"
                            Grid.Column="2"
                            Foreground="#DDFFFFFF" />

                    <DockPanel x:Name="Toolbox"
                               Height="200"
                               Grid.Column="2"
                               VerticalAlignment="Bottom"
                               Background="#FF303030"
                               Panel.ZIndex="2"
                               RenderTransformOrigin="0.5,0.5">
                        <DockPanel.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform />
                                <SkewTransform />
                                <RotateTransform />
                                <TranslateTransform Y="200" />
                            </TransformGroup>
                        </DockPanel.RenderTransform>

                        <Button x:Name="ToolboxCloser"
                                Style="{DynamicResource MaterialDesignToolForegroundButton}"
                                DockPanel.Dock="Top"
                                HorizontalAlignment="Right">
                            <materialDesign:PackIcon Kind="ArrowDown" />
                        </Button>
                        <ScrollViewer VerticalScrollBarVisibility="Disabled"
                                      HorizontalScrollBarVisibility="Visible">
                            <StackPanel Canvas.Bottom="0"
                                        VerticalAlignment="Bottom"
                                        Visibility="Visible"
                                        Orientation="Horizontal">
                                <Expander ExpandDirection="Right">
                                    <Expander.Header>
                                        <TextBlock Text="Basic Gates"
                                                   RenderTransformOrigin=".5,.5">
                                            <TextBlock.LayoutTransform>
                                                <RotateTransform Angle="90" />
                                            </TextBlock.LayoutTransform>
                                        </TextBlock>
                                    </Expander.Header>
                                    <StackPanel Orientation="Horizontal"
                                                Margin="8,24,16,24">
                                        <Button Height="100"
                                                Content="AND"
                                                Width="100"
                                                Margin="5"
                                                Click="addAND" />
                                        <Button Height="100"
                                                Content="NAND"
                                                Width="100"
                                                Margin="5"
                                                Click="addNAND" />
                                        <Button Height="100"
                                                Content="NOR"
                                                Width="100"
                                                Margin="5"
                                                Click="addNOR" />
                                        <Button Height="100"
                                                Content="OR"
                                                Width="100"
                                                Margin="5"
                                                Click="addOR" />
                                        <Button Height="100"
                                                Content="XOR"
                                                Width="100"
                                                Margin="5"
                                                Click="addXOR" />
                                        <Button Height="100"
                                                Content="XNOR"
                                                Width="100"
                                                Margin="5"
                                                Click="addXNOR" />
                                        <Button Height="100"
                                                Content="Not"
                                                Width="100"
                                                Margin="5"
                                                 />
                                    </StackPanel>
                                </Expander>
                                <Expander ExpandDirection="Right" IsExpanded="True">
                                    <Expander.Header>
                                        <TextBlock Text="Input Output"
                                                   RenderTransformOrigin=".5,.5">
                                            <TextBlock.LayoutTransform>
                                                <RotateTransform Angle="90" />
                                            </TextBlock.LayoutTransform>
                                        </TextBlock>
                                    </Expander.Header>
                                    <StackPanel Orientation="Horizontal"
                                                Margin="8,24,16,24">
                                        <Button Background="RoyalBlue"
                                                Height="100"
                                                Content="Input"
                                                Width="100"
                                                Margin="5"
                                                Click="addInput" />
                                        <Button Background="RoyalBlue"
                                                Height="100"
                                                Content="Output"
                                                Width="100"
                                                Margin="5"
                                                Click="addOutput" />
                                        <Button Background="RoyalBlue"
                                                Height="100"
                                                Content="Label"
                                                Width="100"
                                                Margin="5"
                                                Click="addLabel" />
                                    </StackPanel>
                                </Expander>
                                <Expander ExpandDirection="Right">
                                    <Expander.Header>
                                        <TextBlock Text="Sequential Components"
                                                   RenderTransformOrigin=".5,.5">
                                            <TextBlock.LayoutTransform>
                                                <RotateTransform Angle="90" />
                                            </TextBlock.LayoutTransform>
                                        </TextBlock>
                                    </Expander.Header>
                                    <StackPanel Orientation="Horizontal"
                                                Margin="8,24,16,24">
                                        <Button Background="RoyalBlue"
                                                Height="100"
                                                Content="Clock"
                                                Width="100"
                                                Margin="5"
                                                Click="addClock" />
                                        <Button Background="RoyalBlue"
                                                Height="100"
                                                Content="FlipFlop"
                                                Width="100"
                                                Margin="5"
                                                Click="addFlipFlop" />
                                    </StackPanel>
                                </Expander>
                            </StackPanel>
                        </ScrollViewer>
                    </DockPanel>
                    <materialDesign:Snackbar MessageQueue="{materialDesign:MessageQueue}"
                                             x:Name="MainSnackbar"
                                             Grid.Column="2" />
                </Grid>

            </DockPanel>
        </materialDesign:DrawerHost>
    </materialDesign:DialogHost>
</Window>

<!--<Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="284*"/>
        </Grid.RowDefinitions>
        <DockPanel Background="RoyalBlue">
            <Button DockPanel.Dock="Left" Width="35" Background="RoyalBlue" Foreground="White" Padding="9,4" BorderBrush="{x:Null}" Click="open2">≡</Button>
            <Button DockPanel.Dock="Right" Width="35" Background="RoyalBlue" Foreground="White" Padding="0" BorderBrush="{x:Null}" FontSize="18">?</Button>
            <Button DockPanel.Dock="Right" Width="35" Background="RoyalBlue" Foreground="White" Padding="0" BorderBrush="{x:Null}" FontSize="18">►</Button>
            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="White" FontSize="20">Title</TextBlock>
        </DockPanel>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="150"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <StackPanel Background="#FFA8A5A5">
                <Label HorizontalAlignment="Center" FontWeight="Bold">Properties</Label>
                <StackPanel>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                        <TextBlock VerticalAlignment="Center">Property 1</TextBlock>
                        <ComboBox x:Name="comboBox" VerticalAlignment="Stretch" SelectedIndex="0" Width="90" Margin="15,0,0,0" SelectionChanged="comboBox_SelectionChanged">
                            <TextBlock>value 1</TextBlock>
                            <TextBlock>value 2</TextBlock>
                        </ComboBox>
                    </StackPanel>
                    <CheckBox Margin="0,10,0,0" Content="Property 2"></CheckBox>
                    <CheckBox Margin="0,10,0,0" Content="Property 3"></CheckBox>
                </StackPanel>
            </StackPanel>
            <GridSplitter Grid.Column="0" ResizeDirection="Columns" Width="10" Height="Auto" VerticalAlignment="Stretch" Margin="0" Name="GridSplitter1"  />

            <StackPanel x:Name="popup" Canvas.Bottom="0" VerticalAlignment="Bottom" Height="200" Background="Gray" Grid.ColumnSpan="2" Visibility="Hidden" Orientation="Horizontal" Panel.ZIndex="1">
                <Button Background="RoyalBlue" Height="100" Content="AND" Width="100" Margin="5" Click="addAND"></Button>
                <Button Background="RoyalBlue" Height="100" Content="NAND" Width="100" Margin="5" Click="addNAND"></Button>
                <Button Background="RoyalBlue" Height="100" Content="NOR" Width="100" Margin="5" Click="addNOR"></Button>
                <Button Background="RoyalBlue" Height="100" Content="OR" Width="100" Margin="5" Click="addOR"></Button>
                <Button Background="RoyalBlue" Height="100" Content="XOR" Width="100" Margin="5" Click="addXOR"></Button>
                <Button Background="RoyalBlue" Height="100" Content="OR" Width="100" Margin="5" Click="addXNOR"></Button>
                <Button Background="RoyalBlue" Height="100" Content="Input" Width="100" Margin="5" Click="addInput"></Button>
                <Button Background="RoyalBlue" Height="100" Content="Output" Width="100" Margin="5" Click="addOutput"></Button>
            </StackPanel>
            <StackPanel x:Name="popup1" Canvas.Bottom="0" HorizontalAlignment="Left" Width="300" Background="#FF6E4A4A" Grid.ColumnSpan="2" Visibility="Hidden" Panel.ZIndex="1">
                <ListBox>
                    <TextBlock>Open</TextBlock>
                    <TextBlock>Save</TextBlock>
                    <TextBlock>Close</TextBlock>
                </ListBox>
            </StackPanel>
            <Canvas Grid.Column="1" Name="canvas"  Background="#FF271F1F"/>
        </Grid>
        <Button x:Name="clear" Style="{DynamicResource MaterialDesignFloatingActionLightButton}" Margin="0,0,34,26.5" HorizontalAlignment="Right" Height="38" Width="38" Content="+" FontSize="26.667" FontWeight="Bold" BorderBrush="{x:Null}" Background="RoyalBlue" VerticalAlignment="Bottom" Click="open" RenderTransformOrigin="1.711,0.605" Grid.Row="1" d:LayoutOverrides="VerticalAlignment"/>
    </Grid>

</Window>-->

    
    
